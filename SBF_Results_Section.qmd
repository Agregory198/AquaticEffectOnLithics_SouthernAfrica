---
title: "SBF_Results_Section"
execute:
  echo: false
  warning: false
  message: false
format: docx
editor: visual
---

```{r}
# To plot figures
library(ggplot2)
library(forcats)
library(ggridges)
library(cowplot)

library(viridis)

library(scales)
library(stringr)

# To generate tables
library(gtsummary)
library(broom)
library(broom.mixed)

library(stargazer)

# To tidy the data
library(tidyr)
library(dplyr)
library(forcats)
# To generate multilevel models
library(lme4)

# Bayesian
library(brms)
library(emmeans)
```

```{r}
scraper_red <- function(L, D, a, b){
  
  t = D * sin(a)
  D3 = D * cos(a)
  D1 = t/(sin(b))
  D4 = (t * cos(b))/(sin(b))
  
  D2 = D4 - D3
  
  B = t * (sin(b)) # define base B to find height (which is also D1)
  
  h = sin(b) * ((t*(cos(b)/sin(b))) - (D*cos(a)))
  
  A =  0.5 * B * h# find values of area now
  
  RE = L*((D^2)/2)*((sin(a*(pi/180))^2 * 
                       (cos(b*(pi/180))/sin(b*(pi/180)))) - 
                      (sin(a*(pi/180)) * cos(a*(pi/180))))
  
  
  output <- tibble(Reduction = RE)
  
  return(output)
  
  
}
```

```{r}
df <- read.csv("AG_SUmmer2024_06_26_Final.csv") |>
  filter(RAWMATERIAL != "BWA UPPER 1") |>
  mutate(STRAT = ifelse(STRAT == "3a", "3", # combine strat 3a and 3b
                        ifelse(STRAT == "3b", "3", STRAT))) |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete"))

df |>
  dplyr::filter(ARTIFACTCLASS=="Core") |>
  group_by(RAWMATERIAL)|>
  dplyr::summarise(a = mean(LENGHTLONGESTFLAKESCAR)) -> df.core_average

df.flakes <- df |>
  filter(ARTIFACTCLASS == "Flake" & COMPLETENESS == "Complete") |>
  select(1:11,33:35,38,48:53,64:69)|>
  mutate(TECHLENGTH = as.numeric(TECHLENGTH),
         Utility = MAXWIDTH*MAXLENGTH,
         Reduction = ifelse(
           RAWMATERIAL == "Opaline/CCS", 
          TECHLENGTH/df.core_average$a[which(df.core_average == "Opaline/CCS")],
                      ifelse(RAWMATERIAL == "Quartz", 
          TECHLENGTH/df.core_average$a[which(df.core_average == "Quartz")],
                       ifelse(RAWMATERIAL == "Quartzite", 
          TECHLENGTH/df.core_average$a[which(df.core_average == "Quartzite")],
                              TECHLENGTH/17.70))))

df.cores <- df |>
  filter(ARTIFACTCLASS == "Core" & CORECOMPLETENESS == "Complete") |>
  select(1:10,13,54:69) |>
  mutate(SA_Ellipse = (4*pi)*
           ((((((MAXLENGTH/2)*(MAXWIDTH/2))^1.6075)+
           (((MAXLENGTH/2)*(MAXTHICKNESS/2))^1.6075)+
           (((MAXWIDTH/2)+(MAXTHICKNESS/2))^1.6075))/3)^(1/1.6075)))

df.retouch <- df |>
  filter(ARTIFACTCLASS == "RetouchedTool" & RAWMATERIAL != "BWA UPPER 1" &
           COMPLETENESS == "Complete") |>
  select(1:11,13:32,36:47,64:69)
```

# Results

We examine the technological organization before and during a focus on coastal resources to evaluate whether increasing coastal resource use led to significant shifts in hunter-gatherer mobility and technological strategies at SBF. To accomplish this, we examine 1) raw material distributions, 2) lithic tool utility and reduction intensity, and 3) retouch intensity. These data inform us about where hunter-gatherers procured their materials and how they transported toolstone material around the landscape. The lithic tool utility, including cutting-edge and reduction intensity, allows us to evaluate whether hunter-gatherers significantly changed how they managed their lithic technology. Lastly, we examine the distribution of retouched tools, including retouch intensity, to evaluate changes in the composition of hunter-gatherersâ€™ toolkits. Together, these results will tell us whether hunter-gatherers significantly changed lithic procurement, transport, use, and discard, which will inform us about hunter-gatherer mobility and technological strategies before and during increasing coastal resource use.

## Raw material distributions

Table 1 and @fig-RawMaterial show the distribution of artifact type by raw material. These data suggest that, as hunter-gatherer focus on coastal resources, there is a decrease in the proportion of retouched silcrete tools until layer 2 while silcrete cores become absent starting at layer 2. Meanwhile, there is a general increase in quartz and quartzite cores as hunter-gatherers focused on coastal resources. Table 1 shows that the frequency of silcrete materials decreases through time, implying reduced deposition of these materials as hunter-gatherers focused on coastal resources. Since other studies have shown silcrete to be an exotic material, these results suggest that increasing focus on coastal resources led to reduced transport of silcrete into the site and an increase in the use of more local raw materials like quartz and quartzite.

An analysis of cortical-to-noncortical flakes (@fig-Cortical) further implies significant shifts in raw material transport. @fig-Cortical shows that the cortical-to-noncortical ratio is greatest in layer 4a but decreases when hunter-gatherers increase their focus on coastal resources. Although the silcrete ratios fluctuate, they remain relatively low, likely due to the distance in which these materials were transported into SBF. The main pattern here is in the more local quartz and quartzite materials. These data imply that hunter-gatherers transported materials with greater cortical coverage into SBF before we see increased coastal resource use, pointing to either 1) a shift where hunter-gatherers procured their raw materials, or 2) hunter-gatherers reduced cortical stone elsewhere on the landscape before transporting it to SBF. These results, again, suggest significant shifts in raw material procurement and transport into SBF.

\newpage

```{r tab.cap="Table 1. Count and percentage of the three main lithic categories conditioned by raw material: Cores, Flakes, and Retouched tools."}
df |>
  select(STRAT, RAWMATERIAL, ARTIFACTCLASS) |>
  mutate(ARTIFACTCLASS = ifelse(ARTIFACTCLASS ==
                                  "RetouchedTool", "Retouched tools", ARTIFACTCLASS),
         RAWMATERIAL = 
           fct_relevel(RAWMATERIAL,
                       "Quartz", "Quartzite", "Silcrete")) |>
  rename(Layer = STRAT,
         `Artifact class` = ARTIFACTCLASS) |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  tbl_strata(
    strata = RAWMATERIAL,
    .tbl_fun =
      ~ .x |>
        tbl_summary(by = "Artifact class", missing = "no") |> add_n()
  ) |>
  modify_header(label = "")
```

```{r fig-RawMaterial, fig.cap="Proportion of three main lithic tool types (cores, flakes, and retouched tools) conditioned by raw material type. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}
#| label: fig-RawMaterial

df |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  group_by(STRAT, RAWMATERIAL, ARTIFACTCLASS) |>
  summarize(Freq = n()) |>
  mutate(cs = sum(Freq),
         prop = Freq/cs) |>
  ggplot(aes(x = STRAT, y = prop, fill = ARTIFACTCLASS))+
  geom_col()+
  facet_wrap(~RAWMATERIAL)+
  labs(fill = "",
       x = "Layer (Youngest to Oldest)",
       y = "Proportion") +
  theme_minimal()+
  scale_fill_viridis_d()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))
```

\newpage

```{r fig-Cortical, fig.cap="Bar plot that shows the cortical-to-noncortical ratios. Silcrete, quartz, and quartzite peak in layer 4a before dropping to low ratio values in layer 3. Low ratios in layer 3 imply less cortical flakes than layer 4a. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}

# Cortical to non-cortical
df |>
  mutate(cortical = ifelse(CORTEX=="0%", 0, 1)) |>
  group_by(cortical, STRAT, RAWMATERIAL) |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  summarize(n()) |>
  pivot_wider(names_from = "cortical", values_from = `n()`)|>
  group_by(RAWMATERIAL, STRAT) |>
  summarize(ratio = `1`/`0`) |>
  
  ggplot()+
  geom_bar(aes(x = STRAT, y = ratio, fill = RAWMATERIAL),
           stat = "identity", position = "dodge") +
  ylab("Cortical-to-Noncortical") + xlab("Layer") +
  labs(fill = "")+
  theme_minimal()+
  scale_fill_viridis_d()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))
```

### Raw material surplus

Once the raw materials are transported into SBF, @fig-Surplus shows evidence that larger lithics were discarded when hunter-gatherers focused on coastal resources. During layers 4a and 4b, there were more small lithics over larger lithics, suggesting hunter-gatherers opted for smaller, lighter, toolkits when their diets were primarily composed of terrestrial foods. Therefore, these data provide evidence for a significant shift in how hunter-gatherers managed their surplus raw material, which has larger implications for shifting hunter-gatherer mobility patterns through this period.

## Flake utility and reduction intensity

@fig-Utility and @fig-Reduction show the posterior distribution for the log-utility and reduction intensity of quartz, quartzite, and silcrete flakes. An analysis of variance (ANOVA) for @fig-Utility and @fig-Reduction both suggest that the mean log-utility and reduction intensity is significantly different between raw materials but not within the raw material types across SBF's layers (see supplemental tables 1 and 2). Therefore, these data imply that there is no significant shift in how hunter-gatherers managed the remaining utility of stone flakes as they focused on aquatic resources.

We calculate the ratio between the flake utility and reduction intensity across each layer to evaluate whether there is an interaction between these two metrics through time. @fig-UtilityReduction shows the posterior distribution for utility-to-reduction intensity ratios. An ANOVA suggests that there is a significant difference between raw materials but not within raw materials or through SBF's sequence (see supplemental table 3). Specifically, quartzite has greater utility to reduction intensity than do quartz and silcrete materials. The only notable pattern is that, quartz and silcrete are significantly different in layers 3, 4a, and 4b, but are not distinguishable in layers 1 and 2. Overall, these results imply no significant changes in how hunter-gatherers managed flake utility or reduction intensity when they increased their use of coastal resources.

```{r fig-Surplus, fig.cap="Bar plot that shows the ratio between small and large lithics, including flakes, cores, and retouched tools. Higher ratios imply more small tools over larger tools, smaller ratios imply more large tools to small tools and thus, a greater surplus of raw material. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}
df |>
  select(MASS, STRAT, RAWMATERIAL) |>
  mutate(Quant = ifelse(MASS < quantile(MASS, probs = 0.75), "q1", "q2")) |>
  group_by(STRAT, Quant) |>
  summarize(
    c = n(),
    m1 = sum(MASS),
    ratio = m1/c) |>
  select(STRAT, ratio, Quant) |>
  pivot_wider(names_from = Quant, values_from = ratio) |> 
  ggplot()+
  geom_bar(aes(x = STRAT, y = q1/q2),
           stat = "identity", position = "dodge")+
  xlab("Layers")+ylab("Small-to-large stone tools")+
  theme_minimal()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))
```

```{r}
# create database that stores the flakes' utility
df.flakes |>
  group_by(STRAT, RAWMATERIAL) |>
  summarize(mean = mean(Utility), sd = sd(Utility)) |>
  mutate(ARTIFACT = rep("Flake", n())) -> flake.ut

# Store data in a database for Bayesian analysis with log-utility
df.flakes_bayes <- df.flakes |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  mutate(log_Utility = log(Utility))

my_prior <- prior(normal(6,1), class = "Intercept")+
  prior(normal(0,0.5), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
flakes.fit <- brm(
  log_Utility ~ STRAT:RAWMATERIAL,
  data = df.flakes_bayes,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 1111
)
```

```{r}
#| include: false

# Evaluate the posterior distribution for the above Bayesian analysis
pp_check(flakes.fit)
```

```{r fig-Utility, fig.cap="Boxplot of log-utility separated by layer and raw material. There are significant differences between raw material but not within raw material. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}
# Conduct pairwise comparisons
emms <- emmeans(flakes.fit, ~STRAT:RAWMATERIAL)

# Filter by significant values
utility_supp <- as_tibble(pairs(emms, adjust = "bonferroni")) |> filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds <- posterior_predict(flakes.fit)
posterior_data <- cbind(df.flakes_bayes, t(posterior_preds))

posterior_long <- posterior_data %>%
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")

ggplot() +
  geom_boxplot(data=posterior_long, aes(x = STRAT, y = predicted_value, fill = RAWMATERIAL),outlier.shape = NA) +
  
  labs(x = "Layer", y = "log Utility") +
  labs(fill = "")+
  theme_minimal()+
  scale_fill_viridis_d()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))



```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

```{r}

df.flakes_bayes3 <- df.flakes |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  mutate(CE = MAXWIDTH+(MAXLENGTH*2)/(MASS^(1/3)),
         Reduction = log(Reduction))

my_prior <- prior(normal(0,1), class = "Intercept")+
  prior(normal(0,0.5), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
flakes.fit2 <- brm(
  Reduction ~ STRAT:RAWMATERIAL,
  data = df.flakes_bayes3,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 12345
)

```

```{r}
#| include: false
#| 
library(tidybayes)

# Model checking

fitted_values <- fitted(flakes.fit2) |>
  as_tibble() |>
  mutate(type = "Fit")

residuals <- residuals(flakes.fit2) |>
  as_tibble() |>
  mutate(type = "Res")

# Residual plot
ggplot(residuals, aes(x = Estimate)) +
  geom_histogram(bins = 30) +
  theme_minimal() +
  ggtitle("Residuals")

# Plot residuals vs fitted values
ggplot(data.frame(fitted_values, residuals), 
       aes(x = Estimate, y = Estimate, group = type))+
  geom_point() +
  theme_minimal() +
  ggtitle("Residuals vs Fitted Values")+
  xlab("Residual") + ylab("Fitted values")

# Perform LOO cross-validation
loo_result <- loo(flakes.fit2)
print(loo_result)

# Plot LOO result
plot(loo_result)

# Generate posterior predictive plots
pp_check(flakes.fit2, type = "dens_overlay")
```

```{r}
# Conduct pairwise comparisons
emms3 <- emmeans(flakes.fit2, ~STRAT:RAWMATERIAL)

# Filter by significant values
reduction_supp <- as_tibble(pairs(emms3, adjust = "bonferroni")) |> filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds3 <- posterior_predict(flakes.fit2)
posterior_data3 <- cbind(df.flakes_bayes3, t(posterior_preds3))

posterior_long3 <- posterior_data3 %>%
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")
```

```{r  fig-Reduction, fig.cap="Boxplot of reduction intensity separated by layer and raw material. There is significant differences between raw materials but not within raw materials. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}
ggplot(posterior_long3, aes(x = STRAT, y = predicted_value, fill = RAWMATERIAL)) +
  geom_boxplot(outlier.shape = NA) +
  
  labs(x = "Layer", y = "Reduction Intensity") +
  labs(fill = "")+
  theme_minimal()+
  scale_fill_viridis_d()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))+
  theme(text = element_text(size = 18))


```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

```{r}
df.flakes_bayes2 <- df.flakes |>
  filter(RAWMATERIAL %in% c("Quartz", "Quartzite", "Silcrete")) |>
  mutate(U_R = Utility/Reduction,
         U_R_log = log(U_R))

my_prior <- prior(normal(5.5,1), class = "Intercept")+
  prior(normal(0,0.5), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
flakes.fit2 <- brm(
  U_R_log ~ STRAT:RAWMATERIAL,
  data = df.flakes_bayes2,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 1111222
)
```

```{r}
#| include: false

# Evaluate the posterior distribution for the above Bayesian analysis
pp_check(flakes.fit2)
```

```{r}
# Conduct pairwise comparisons
emms2 <- emmeans(flakes.fit2, ~STRAT:RAWMATERIAL)

# Filter by significant values
ut_red_supp <- as_tibble(pairs(emms2, adjust = "bonferroni")) |> filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds2 <- posterior_predict(flakes.fit2)
posterior_data2 <- cbind(df.flakes_bayes2, t(posterior_preds2))

posterior_long2 <- posterior_data2 |>
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")

```

```{r fig-UtilityReduction, fig.cap="Boxplot of log-utility to reduction intensity separated by layer and raw material. There are significant differneces between raw materials but not within raw materials. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}
ggplot(posterior_long2, aes(x = STRAT, y = predicted_value, fill = RAWMATERIAL)) +
  geom_boxplot(outlier.shape = NA) +
  
  labs(x = "Layer", y = "log Utility-to-Reduction intensity") +
  labs(fill = "")+
  theme_minimal()+
  scale_fill_viridis_d()+
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))


```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

## Scraper utility and retouch intensity

@fig-ScraperUtility shows the posterior distribution for log-utility for scrapers at SBF. The plot suggests that the remaining scraper utility is highest during the intervals associated with terrestrial-dominated diets (layers 4a and 4b) with lower, but stable, values during periods with aquatic-dominated diets (layers 1, 2, and 3). An ANOVA confirms that the scraper utility for aquatic-dominated layers is significantly lower than the terrestrial-dominated layers (see supplmental table 4). These results imply that the scrapers that hunter-gatherers deposited in layers 4a and 4b have, on average, more remaining stone left unexploited than in layers 1, 2, and 3.

@fig-ScraperRetouch shows the posterior distribution for log-retouch intensity for scrapers at SBF. An ANOVA shows that layer 3 is distinct from layers 4a and 4b. However, the sample size for layers 1 (n = 2) and 2 (n = 6) are so low, there is no statistical difference between these distributions (see supplmental table 5). Regardless, there is evidence that, as hunter-gatherers focused on aquatic resources in layer 3, there was a shift towards lower reduction intensity, suggesting a shift in site use during this period.

To evaluate whether hunter-gatherer managed scraper utility and retouch intensity differently through SBF, we calculated the ratio between scraper utility and retouch intensity. @fig-ScraperUtilityReduction shows the posterior distribution for the utility-to-retouch intensity ratio. Although there were significant differences in how hunter-gatherers managed utility during layers 4a and 4b (@fig-ScraperUtility), @fig-ScraperUtilityReduction does not reflect the interaction between scraper retouch intensity. Ultimately, these results suggest only the scraper utility shifts when hunter-gatherers increased coastal resource use, further implying that hunter-gatherers treated scraper utility independently from retouch intensity.

```{r}
# Define a database for scraper retouch
df.scrap <- df.retouch |>
  filter(RETOUCHEDPIECETYPOLOGY == "SideScraper" | 
           RETOUCHEDPIECETYPOLOGY == "EndScraper" |
           RETOUCHEDPIECETYPOLOGY == "Side-EndScraper") |>
  select(1:11,14:21, 33:43, 44:49) |>
  select("SCRAPERRETOUCHHEIGHT1", "SCRAPERRETOUCHHEIGHT2", "SCRAPERRETOUCHHEIGHT3",
         "SCRAPERRETOUCHANGLE1", "SCRAPERRETOUCHANGLE2", "SCRAPERRETOUCHANGLE3",
         "SCRAPERDORSALANGLE1", "SCRAPERDORSALANGLE2", "SCRAPERDORSALANGLE3",
         "SCRAPERRETOUCHLENGTH",
         "SCRAPERMAXTHICKNESS",
         "MAXLENGTH", "MAXWIDTH",
         
         "RAWMATERIAL", "STRAT", "MASS") |>
  na.omit() |>
  mutate(RET_INT = round(((SCRAPERRETOUCHHEIGHT1+
                            SCRAPERRETOUCHHEIGHT2+
                            SCRAPERRETOUCHHEIGHT3)/SCRAPERMAXTHICKNESS)*
                           SCRAPERRETOUCHLENGTH,2),
         SA = MAXLENGTH*MAXWIDTH)


# Preprocess data to enter into custom function to calculate scraper reduction
scrap.red <- df.scrap |>
  na.omit() |>
  mutate(D = (SCRAPERRETOUCHHEIGHT1+SCRAPERRETOUCHHEIGHT2+SCRAPERRETOUCHHEIGHT3)/3,
         a = (SCRAPERRETOUCHANGLE1+SCRAPERRETOUCHANGLE2+SCRAPERRETOUCHANGLE3)/3,
         b = (SCRAPERDORSALANGLE1+SCRAPERDORSALANGLE2+SCRAPERDORSALANGLE3)/3) |>
  rename(L = SCRAPERRETOUCHLENGTH)

scrap.red <- scraper_red(scrap.red$L, scrap.red$D, scrap.red$a, scrap.red$b)/1000

scrap.red <- scrap.red |>
  mutate(RE = log(as.vector(scrap.red$Reduction)),
         STRAT = df.scrap$STRAT,
         UTILITY = df.scrap$MAXWIDTH*df.scrap$MAXLENGTH,
         
         RE_Ut = UTILITY/Reduction,
         
         MASS = df.scrap$MASS)
```

```{r}
scrap.red_bayes2 <- scrap.red |>
  mutate(Utility_log = log(UTILITY))

my_prior <- prior(normal(5.5,1), class = "Intercept")+
  prior(normal(0,1), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
scrap.fit <- brm(
  Utility_log ~ STRAT,
  data = scrap.red_bayes2,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 97798765
)
```

```{r}
#| include: false
pp_check(scrap.fit)
```

```{r fig-ScraperUtility, fig.cap="Boxplot of the log-utility intensity for all scrapers at SBF. There is a significant difference between layers 1, 2, 3 and layers 4a and 4b. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}

posterior_means <- (conditional_effects(scrap.fit))
#plot(posterior_means)

emms <- emmeans(scrap.fit, ~STRAT)

# Filter by significant values
scrap_ut_supp <- as_tibble(pairs(emms, adjust = "bonferroni")) |>  filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds <- posterior_predict(scrap.fit)
posterior_data <- cbind(scrap.red, t(posterior_preds))

posterior_long <- posterior_data %>%
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")

ggplot(posterior_long, aes(x = STRAT, y = predicted_value)) +
  geom_boxplot(outlier.shape = NA) +
  labs(x = "Layer", y = "log Utility") +
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))


```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

```{r}
my_prior <- prior(normal(-4,2), class = "Intercept")+
  prior(normal(0,1), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
scrap.fit <- brm(
  RE ~ STRAT,
  data = scrap.red,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 9779
)
```

```{r}
#| include: false
pp_check(scrap.fit)
```

```{r fig-ScraperRetouch, fig.cap="Boxplot of the log-retouch intensity for all scrapers at SBF. There is a significant difference between layers 4a, 4b, and 3. There is a small sampled of scrapers from each layer and so, I do not separate reduction intensity by raw material. Blue labeled layers (1, 2, and 3) reflect aquatic-dominated diets, and the green layers (4a and 4b) reflect terrestrial-dominated diets."}

posterior_means <- (conditional_effects(scrap.fit))
#plot(posterior_means)

emms <- emmeans(scrap.fit, ~STRAT)

# Filter by significant values
scrap_red_supp <- as_tibble(pairs(emms, adjust = "bonferroni")) |>  filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds <- posterior_predict(scrap.fit)
posterior_data <- cbind(scrap.red, t(posterior_preds))

posterior_long <- posterior_data %>%
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")

ggplot(posterior_long, aes(x = STRAT, y = predicted_value)) +
  geom_boxplot(outlier.shape = NA) +
  labs(x = "Layer", y = "log Retouch Intensity") +
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))


```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

```{r}

scrap.red_bayes3 <- scrap.red |>
  mutate(Utility_Reduction_log = log(UTILITY/Reduction))

my_prior <- prior(normal(5.5,1), class = "Intercept")+
  prior(normal(0,1), class = "b")+
  prior(cauchy(0,1), class = "sigma")

options(mc.cores = parallel::detectCores())
scrap.fit <- brm(
  Utility_Reduction_log ~ STRAT,
  data = scrap.red_bayes3,
  family = gaussian(),
  prior = my_prior,
  chains = 4,
  iter = 2000,
  seed = 97798765
)
```

```{r fig-ScraperUtilityReduction, fig.cap="Plot showing the relationship between scraper utility and retouch intensity at SBF. Layers 4b and 4a have larger values than layers 1, 2, and 3, suggesting hunter-gatherers managed scraper differently after they increased coastal resource use."}
posterior_means <- (conditional_effects(scrap.fit))
#plot(posterior_means)

emms <- emmeans(scrap.fit, ~STRAT)

# Filter by significant values
scrap_ut_red_supp <- as_tibble(pairs(emms, adjust = "bonferroni")) |>  filter((lower.HPD < 0 & upper.HPD < 0) | (lower.HPD > 0 & upper.HPD > 0))

posterior_preds <- posterior_predict(scrap.fit)
posterior_data <- cbind(scrap.red, t(posterior_preds))

posterior_long <- posterior_data %>%
  pivot_longer(cols = `3001`:`3500`, names_to = "iteration", values_to = "predicted_value")

ggplot(posterior_long, aes(x = STRAT, y = predicted_value)) +
  geom_boxplot(outlier.shape = NA) +
  labs(x = "Layer", y = "log Utility-to-Retouch intensity") +
  theme(axis.text.x = element_text(colour = 
                                     c(rep("Blue",3),rep("Forest Green",2))))


```

```{r}
#| include: false
#clean R
rm(flakes.fit)
gc()
```

Overall, the above results suggest that hunter-gatherers significantly altered their mobility strategies when they shifted towards aquatic-dominated diets, but there is little evidence for technological change over the same period. A reduction of "exotic" silcrete, cortical-to-noncortical ratios, and increased raw material surplus implies shifts in how hunter-gatherers procured, transported, and then reduced their stone tools at SBF. However, there is little evidence that hunter-gatherers significantly changed how they managed flake utility and reduction intensity. There are material-dependent differences between silcrete, quartz, and quartzite, but no shifts in these patterns when hunter-gatherers increased coastal resource use. The only notable change in technological organization is the reduction in scraper utility during periods with aquatic-based diets (layers 1, 2, and 3), which may reflect changes in how hunter-gatherers used scrapers and, more general, changes in toolkit composition that they brought into SBF.

# Supplemental Tables

### Supplemental Table 1

```{r}
library(kableExtra)

utility_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between raw material and layer for flake utility at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black") |> # Set header text color to black
  row_spec(1:nrow(utility_supp), color = "black") 
  
```

```{r}
reduction_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between raw material and layer for reduction intesnity at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black") |> # Set header text color to black
  row_spec(1:nrow(reduction_supp), color = "black") 
```

### Supplemental Table 2

```{r}
ut_red_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between raw material and layer for the ratio between utility and reduction intensity at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black") |> # Set header text color to black
  row_spec(1:nrow(ut_red_supp), color = "black") 
```

### Supplemental Table 3

```{r}
scrap_ut_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between quartz scraper utility conditioned by layer at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black") |> # Set header text color to black
  row_spec(1:nrow(scrap_ut_supp), color = "black") 
```

### Supplemental Table 4

```{r}
scrap_red_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between quartz scraper retouch intensity conditioned by layer at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black") |> # Set header text color to black
  row_spec(1:nrow(scrap_red_supp), color = "black") 
```

### Supplemental Table 5

```{r}
#| include: false

# There are no significant difference between layer for these values
scrap_ut_red_supp |>
  mutate(estimate = round(estimate,3),
         lower.HPD = round(lower.HPD,3),
         upper.HPD = round(upper.HPD,3)) |>
  rename(Contrast = contrast,
         `Mean Difference` = estimate,
         `Lower CI` = lower.HPD,
         `Upper CI` = upper.HPD) |>
  kable(caption = "This table shows the significant posterior differences between the ratio for utility and retouch intensity for quartz scrapers conditioned by layer at a 95% Credible interval (CI).") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = F, position = "center") |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, color = "black")  |># Set header text color to black
  row_spec(1:nrow(scrap_ut_red_supp), color = "black") 
```
